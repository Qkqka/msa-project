server:
  port: 0 # 8000
  compression:
    enabled: true # gzip 설정
    mime-types: text/html,text/plain,text/css,application/javascript,application/json # 압축을 허용할 mime-type
    min-response-size: 500 # 압축을 허용할 최소 사이즈 (500바이트 미만의 데이터라면 압축을 진행하지 않음)

spring:
  application:
    name: backoffice
  session:
    store-type: redis
  redis:
    host: localhost
    port: 6379
#    flush-mode: on_save # 호출될 떄만 redis에 기록
#    namespace: spring:session # key값에 대한 prefix
  thymeleaf:
#    prefix: classpath:templates/
#    suffix: .html
    cache: false # thymeleaf에 대한 캐시를 남기지 않는다. (운영시에는 true)
    check-template-location: true # thymeleaf 디렉토리에 파일이 있는지 없는지 체크, 없으면 에러를 발생시킨다.

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}} # random port 지정 시 서비스 구분하기 위해 각각의 서비스에 instance-id로 구분하는 방법
  client:
    register-with-eureka: true        # eureka 서비스 등록 여부
    fetch-registry: true              # 
#    registry-fetch-interval-seconds: 15  # eureka에게 서비스 정보를 가져오는 주기
    disable-delta: true               # eureka에게 서비스 정보를 가져올때 변경된 내용만 가져온다. (false로 하면 전체를 가져오기에 대역폭 낭비)
    service-url:
      defaultZone: http://admin:admin123@localhost:9000/eureka/

logging:
  level:
    com.msa: TRACE