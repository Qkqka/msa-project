server:
  port: 9100

spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true
      routes:
#        - id: auth-api-login
#          uri: lb://AUTH-API # eureka에 등록된 서비스 이름
#          predicates:
#            - Path=/auth/login
#            - Method=GET
#          filters:
#            - RewritePath=/auth/(?<segment>.*), /$\{segment}
#        - id: auth-api-logout
#          uri: lb://AUTH-API # eureka에 등록된 서비스 이름
#          predicates:
#            - Path=/auth/logout
#            - Method=GET
#          filters:
#            - RewritePath=/auth/(?<segment>.*), /$\{segment}
#        - id: auth-api-check
#          uri: lb://AUTH-API # eureka에 등록된 서비스 이름
#          predicates:
#            - Path=/auth/check
#            - Method=GET
#          filters:
#            - RewritePath=/auth/(?<segment>.*), /$\{segment}
        - id: auth-api
          uri: lb://AUTH-API # eureka에 등록된 서비스 이름
          predicates:
            - Path=/auth/**
#            - Method=GET
          filters:
#            - AddRequestHeader=auth-api-request, auth-api-request-header
#            - AddResponseHeader=auth-api-response, auth-api-response-header
#            - name: CustomFilter
            - name: BackofficeAuthFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true
            - RewritePath=/auth/(?<segment>.*), /$\{segment}
        - id: system-api
          uri: lb://SYSTEM-API
          predicates:
            - Path=/sys/**
          filters:
#            - CustomFilter
            - BackofficeAuthFilter
            - RewritePath=/sys/(?<segment>.*), /$\{segment}
        - id: product-api
          uri: lb://PRODUCT-API
          predicates:
            - Path=/prd/**
          filters:
#            - CustomFilter
            - BackofficeAuthFilter
            - RewritePath=/prd/(?<segment>.*), /$\{segment}
        - id: backoffice
          uri: lb://BACKOFFICE
          predicates:
            - Path=/**
            - Host=back-office.com*
        - id: backoffice-nuxt
          uri: http://localhost:3000
          predicates:
            - Path=/**
            - Host=back-office-nuxt.com*

eureka:
  client:
    register-with-eureka: true          # eureka 서비스 등록 여부
    fetch-registry: true                # 
    registry-fetch-interval-seconds: 3  # 서비스 목록 3초마다 캐싱  
    disable-delta: true                 # 캐싱시 변경된 부분만 업데이트할 지 여부 (false로 하면 전체를 가져오기에 대역폭 낭비)
    service-url:
      defaultZone: http://admin:admin123@localhost:9000/eureka/

logging:
  level:
    com.msa: DEBUG

## actuator
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "gateway" # http://localhost:9000/actuator/gateway/routes
#  endpoint:
#    gateway:
#      enabled: true
#    health:
#      show-details: always  # actuator에서 상세한 정보들을 확인하기 위해 설정

application:
  auth:
    admin-except-url-list: /, /auth/login*, /auth/health_check*
  web:
    back: # 다 똑같이..? 아님 각각?
      access-key: ENC(dm3it4NbmUGStPxqI+1Cm2//G1iO14vX)
      access-value: ENC(Or5+Gb82k5Ed/7NpF1b+72FKu8m4Zic4V61o1x5sik8=)
  api:
    auth: 
      access-key: ENC(dm3it4NbmUGStPxqI+1Cm2//G1iO14vX)
      access-value: ENC(Or5+Gb82k5Ed/7NpF1b+72FKu8m4Zic4V61o1x5sik8=)


